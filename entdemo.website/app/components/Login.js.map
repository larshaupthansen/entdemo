{"version":3,"sources":["components/Login.ts"],"names":["Login","Login.constructor","Login.loginLinkedIn","Login.getProfile","Login.logoutLinkedIn"],"mappings":"AACA,wDAAwD;;;;;;;;;;;;;IAUxD;QAwBEA;YAxBFC,iBA2DCA;YAvCCA,YAAOA,GAAkBA,IAAIA,KAAKA,CAACA,OAAOA,EAAEA,CAACA;YAMzCA,IAAIA,CAACA,qBAAqBA,GAAGA,IAAIA,6CAAqBA,EAAEA,CAACA;YAEzDA,IAAIA,CAACA,cAAcA,GAAGA,IAAIA,KAAKA,EAA4BA,CAACA;YAC5DA,IAAIA,CAACA,cAAcA,CAACA,IAAIA,CAAEA;gBACxBA,IAAIA,EAAEA,MAAMA;gBACZA,GAAGA,EAAGA,EAAEA;aAETA,CAACA,CAAAA;YAEFA,IAAIA,QAAQA,GAAGA,UAACA,IAA8BA,IAAKA,OAAAA,KAAIA,CAACA,cAAcA,GAAGA,IAAIA,EAA1BA,CAA0BA,CAACA;YAC9EA,IAAIA,CAACA,qBAAqBA,CAACA,iBAAiBA,CAACA,QAAQA,CAACA,CAACA;YAEvDA,IAAIA,CAACA,QAAQA,GAAGA,cAAcA,CAACA,OAAOA,CAACA,QAAQA,CAACA,IAAIA,IAAIA,CAACA;YACzDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;gBAClBA,IAAIA,CAACA,UAAUA,EAAEA,CAACA;YACpBA,CAACA;QACLA,CAACA;QAGDD,6BAAaA,GAAbA;YAEEE,IAAIA,CAACA,qBAAqBA,CAACA,qBAAqBA,EAAEA,CAACA;YACnDA,MAAMA,CAACA,IAAIA,CAACA;QACdA,CAACA;QAEDF,0BAAUA,GAAVA;YACEG,IAAIA,CAACA,qBAAqBA,CAACA,kBAAkBA,CAAEA,UAASA,IAAmBA,IAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,CAAC,CAAC,CAACA,CAACA;QACvGA,CAACA;QAEDH,8BAAcA,GAAdA;YACEI,MAAMA,CAACA,IAAIA,CAACA;QACdA,CAACA;QAzDHJ;YAACA,oBAASA,CAACA;gBACTA,QAAQA,EAAEA,OAAOA;gBACjBA,+FAA+FA;gBAC/FA,yBAAyBA;gBACxBA,WAAWA,EAAEA,EAEbA;aACFA,CAACA;YAGDA,eAAIA,CAACA;gBACJA,WAAWA,EAAEA,iCAAiCA;gBAC9CA,UAAUA,EAAEA,CAACA,cAAGA,EAAEA,aAAEA,CAACA;aACtBA,CAACA;;kBA8CDA;QAADA,YAACA;IAADA,CA3DA,AA2DCA,IAAA","file":"components/Login.js","sourceRoot":"../","sourcesContent":["\r\n/// <reference path=\"../../../tools/typings/tsd.d.ts\" />\r\n\r\n/// <reference path=\"../model/profile.ts\" />\r\n\r\n/* tslint:disable */ \r\nimport {Component, View, bootstrap, For, If} from 'angular2/angular2';\r\nimport {bind} from 'angular2/di';\r\n\r\nimport {IAuthenticationService,AuthenticationService,ExternalLoginViewModel} from 'app/service/authenticationservice'\r\n\r\n@Component({\r\n  selector: 'login',\r\n  // `bindings` can be a list of `Type`, {@link Binding}, {@link ResolvedBinding}, or a recursive\r\n  // list of more bindings.\r\n   injectables: [\r\n    \r\n  ]\r\n})\r\n\r\n// \r\n@View({\r\n  templateUrl: 'app/views/components/login.html',\r\n  directives: [For, If]\r\n})\r\n/* tslint:enable */\r\n\r\n\r\nclass Login {\r\n\r\n  loggedIn: boolean;\r\n  profile: model.Profile = new model.Profile();\r\n  authenticationService : IAuthenticationService;\r\n  loginProviders: ExternalLoginViewModel[];\r\n\r\n  constructor() {\r\n  \r\n      this.authenticationService = new AuthenticationService();\r\n      \r\n      this.loginProviders = new Array<ExternalLoginViewModel[]>();\r\n      this.loginProviders.push( {\r\n        Name: 'test',\r\n        Url : ''\r\n        \r\n      })\r\n      \r\n      var callback = (data: ExternalLoginViewModel[]) => this.loginProviders = data;\r\n      this.authenticationService.getLoginProviders(callback); \r\n      \r\n      this.loggedIn = sessionStorage.getItem('Bearer') != null;\r\n      if (this.loggedIn) {\r\n        this.getProfile();\r\n      }\r\n  }\r\n\r\n\r\n  loginLinkedIn() : boolean {\r\n\r\n    this.authenticationService.redirectToLinkedLogin();\r\n    return true;\r\n  }\r\n\r\n  getProfile()  {\r\n    this.authenticationService.getLinkedInProfile( function(data: model.Profile) {this.profile = data });\r\n  }\r\n\r\n  logoutLinkedIn(): boolean {\r\n    return true;\r\n  }\r\n\r\n}\r\n"]}