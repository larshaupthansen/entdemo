{"version":3,"sources":["service/authenticationService.ts"],"names":["UserInfoViewModel","UserInfoViewModel.constructor","ExternalLoginViewModel","ExternalLoginViewModel.constructor","AuthenticationService","AuthenticationService.constructor","AuthenticationService.redirectToLinkedLogin","AuthenticationService.getLoginProviders","AuthenticationService.getLinkedInProfile","beforeSend"],"mappings":"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","file":"service/authenticationService.js","sourceRoot":"../","sourcesContent":["/// <reference path=\"../../../tools/typings/tsd.d.ts\" />\r\n/// <reference path=\"../model/Profile.ts\" />\r\n\r\n\r\n\r\nexport interface IAuthenticationService {\r\n      \r\n      getLinkedInProfile(callback: (data:model.Profile) => void);\r\n      getLoginProviders(callback: (data: ExternalLoginViewModel[])=> void); \r\n      \r\n}\r\n/* tslint:disable */\r\n//import {Injectable} from 'angular2/di';\r\n//@Injectable()\r\n/* tslint:enable */ \r\n\r\n// From AccountController\r\nexport class UserInfoViewModel {\r\n      email: string;\r\n      hasRegistered: boolean;\r\n      loginProvider: string;      \r\n}\r\n\r\nexport class ExternalLoginViewModel {\r\n      Name: string;\r\n      Url: string;\r\n      State: string;      \r\n}\r\n\r\nexport class AuthenticationService  implements IAuthenticationService {\r\n\r\n\tpublic redirectToLinkedLogin() {\r\n\t\tvar currentUrl: URL = new URL(window.location.href);\r\n      var callbackUrl = currentUrl.origin +  '/LinkedIn/Auth';\r\n      var url: string = ' https://www.linkedin.com/uas/oauth2/authorization?response_type=code'\r\n       +  '&client_id=' + '77ne8opwwucq5l'\r\n       +  '&redirect_uri=' + encodeURI(callbackUrl)\r\n       +  '&state=' + '987654321'\r\n       +  '&scope=r_basicprofile%20r_emailaddress';\r\n\r\n      window.location.href = url;\r\n\t}\r\n\r\n\r\n      public getLoginProviders(callback: (data: ExternalLoginViewModel[])=> void) {\r\n                  \r\n            $.ajax( {\r\n                  url: \"/api/Account/ExternalLogins\",\r\n                  method: \"GET\",\r\n                  data: {                        \r\n                        returnUrl: \"/signin-linkedin.html\",\r\n                        generateState: true\r\n                  },\r\n                  success : function(providerList: ExternalLoginViewModel[]) {\r\n                    \r\n                    console.log(providerList);\r\n                    callback(providerList);\r\n                },\r\n\r\n                error: function(data) {\r\n                     console.log(\"ERROR\");\r\n                    console.log(data);\r\n                }\r\n            });\r\n      }\r\n      \r\n\tpublic getLinkedInProfile(callback: (data:model.Profile) => void) {\r\n\t\t $.ajax({\r\n            url: '/LinkedIn/Proxy',\r\n            method: 'POST',\r\n            data: {\r\n                accessToken:  sessionStorage.getItem('Bearer'),\r\n                url: 'https://api.linkedin.com/v1/people/~:(id,formatted-name,email-address,headline,industry,picture-url)?format=json'\r\n            },\r\n            success: function(data) {\r\n                console.log(data);\r\n                \r\n                $.ajax( {\r\n                  url: \"/api/Account/UserInfo\",\r\n                  method: \"GET\",\r\n                  beforeSend(xhr: JQueryXHR) {\r\n                        xhr.setRequestHeader(\"Authorization\", \"Bearer \"+sessionStorage.getItem('Bearer'));\r\n                  },\r\n                  \r\n                  success : function(userInfo: UserInfoViewModel) {\r\n                    \r\n                    console.log(userInfo);\r\n                },\r\n\r\n                error: function(data) {\r\n                     console.log(\"ERROR\");\r\n                    console.log(data);\r\n                },\r\n            });\r\n                callback(data);\r\n            }\r\n        });\r\n\t}\r\n}\r\n"]}